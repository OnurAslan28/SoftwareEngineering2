@using Microsoft.AspNetCore.Components.Forms
@using StudyMate.Shared.User.Models
@using StudyMate.Client.AppShell
@using StudyMate.Client.User.Services
@inject NavigationManager Nav
@inject AppState State
@inject IUserApi Api

<h3>Login</h3>
<EditForm Model="@LoginData" OnValidSubmit="DoLogin">
	<div class="form-group">
		<label for="username">Username:</label>
		<InputText class="form-control" id="username" autocomplete="true" autofocus="" placeholder="Username"
		           @bind-Value="@LoginData.Username"/>
	</div>
	<div class="form-group">
		<label for="password">Password:</label>
		<InputText class="form-control" id="password" type="password" autocomplete="false" placeholder="Password"
		           @bind-Value="@LoginData.Password"/>
	</div>
	<div class="form-group">
		<InputCheckbox id="stay" @bind-Value="LoginPermanently"/> <label for="stay">Stay logged in</label>
	</div>
	<button type="submit" class="my-btn-primary">Login</button>
	<div class="text-danger">@Error</div>
</EditForm>

@code {

	[Parameter]
	public Action? OnLoggedIn { get; set; }

	protected override void OnInitialized()
	{
		if (State.CurrentUser is not null)
		{
			Nav.NavigateTo("/");
		}
	}

	private LoginRequest LoginData { get; set; } = new();
	private bool LoginPermanently { get; set; }

	private string Error
	{
		get => error;
		set
		{
			error = value;
            StateHasChanged();
		}
	}

	private async void DoLogin()
	{
		try
		{
			var result = await Api.Login(LoginData);
			if (result.Success)
			{
				await State.SetLoggedIn(result.UserData!, result.Token!.Value, LoginPermanently);
				OnLoggedIn?.Invoke();
			}
			else
			{
				Error = result.ErrorMessage!;
			}
		}
		catch (Exception exc)
		{
			Error = exc.Message;
		}
	}

	private string error = "";
}