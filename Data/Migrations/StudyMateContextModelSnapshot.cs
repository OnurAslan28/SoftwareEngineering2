// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StudyMate.Data;

#nullable disable

namespace StudyMate.Data.Migrations
{
    [DbContext(typeof(StudyMateContext))]
    partial class StudyMateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GroupTag", b =>
                {
                    b.Property<int>("GroupsId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("GroupsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("GroupTag");
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.Property<int>("GroupsId")
                        .HasColumnType("integer");

                    b.Property<string>("MembersUsername")
                        .HasColumnType("text");

                    b.HasKey("GroupsId", "MembersUsername");

                    b.HasIndex("MembersUsername");

                    b.ToTable("GroupUser");
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.Property<int>("PostsId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("PostsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("PostTag");
                });

            modelBuilder.Entity("StudyMate.Data.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorUsername")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int?>("PostId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Posted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthorUsername");

                    b.HasIndex("PostId");

                    b.ToTable("Answer", (string)null);
                });

            modelBuilder.Entity("StudyMate.Data.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("Capacity")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OwnerUsername")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Group", (string)null);
                });

            modelBuilder.Entity("StudyMate.Data.Entities.LoginToken", b =>
                {
                    b.Property<Guid>("Token")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Token");

                    b.HasIndex("Username");

                    b.ToTable("LoginToken", (string)null);
                });

            modelBuilder.Entity("StudyMate.Data.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Archived")
                        .HasColumnType("boolean");

                    b.Property<string>("AuthorUsername")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("Posted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("SubForumId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorUsername");

                    b.HasIndex("SubForumId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("StudyMate.Data.Entities.ProfilePicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ForDefault")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("ProfilePicture", (string)null);
                });

            modelBuilder.Entity("StudyMate.Data.Entities.SubForum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SubForum", (string)null);
                });

            modelBuilder.Entity("StudyMate.Data.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tag", (string)null);
                });

            modelBuilder.Entity("StudyMate.Data.Entities.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("BioInfo")
                        .HasColumnType("text");

                    b.Property<string>("CourseOfStudy")
                        .HasColumnType("text");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("ProfilePictureId")
                        .HasColumnType("integer");

                    b.HasKey("Username");

                    b.HasIndex("ProfilePictureId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("GroupTag", b =>
                {
                    b.HasOne("StudyMate.Data.Entities.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyMate.Data.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.HasOne("StudyMate.Data.Entities.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyMate.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("MembersUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.HasOne("StudyMate.Data.Entities.Post", null)
                        .WithMany()
                        .HasForeignKey("PostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyMate.Data.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudyMate.Data.Entities.Answer", b =>
                {
                    b.HasOne("StudyMate.Data.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorUsername");

                    b.HasOne("StudyMate.Data.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId");

                    b.Navigation("Author");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("StudyMate.Data.Entities.LoginToken", b =>
                {
                    b.HasOne("StudyMate.Data.Entities.User", "UserNavigation")
                        .WithMany()
                        .HasForeignKey("Username");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("StudyMate.Data.Entities.Post", b =>
                {
                    b.HasOne("StudyMate.Data.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorUsername");

                    b.HasOne("StudyMate.Data.Entities.SubForum", "SubForum")
                        .WithMany()
                        .HasForeignKey("SubForumId");

                    b.Navigation("Author");

                    b.Navigation("SubForum");
                });

            modelBuilder.Entity("StudyMate.Data.Entities.User", b =>
                {
                    b.HasOne("StudyMate.Data.Entities.ProfilePicture", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfilePicture");
                });
#pragma warning restore 612, 618
        }
    }
}
